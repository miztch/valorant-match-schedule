AWSTemplateFormatVersion: "2010-09-09"
Transform: "AWS::Serverless-2016-10-31"
Description: valorant-match-schedule

Parameters:
  ApplicationName:
    Description: resource prefix
    Type: String
    Default: vms
  ScheduleExpression:
    Description: schedule expression for the eventbridge event
    Type: String
    Default: rate(3 hours)
  CalendarIdAmericas:
    Type: String
  CalendarIdChina:
    Type: String
  CalendarIdEmea:
    Type: String
  CalendarIdPacific:
    Type: String
  CalendarIdInternational:
    Type: String
  ServiceAccountKeyParameter:
    Type: String
    Default: "/google/service-account-key"
  DaysToRetainLogs:
    Description: days to retain logs in CloudWatch
    Type: Number
    Default: 30

Globals:
  Function:
    Architectures:
      - x86_64
    Handler: bootstrap
    MemorySize: 128
    Runtime: provided.al2023

Resources:
  ScrapeMatchesStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Name: !Sub ${ApplicationName}-scrape-matches
      DefinitionUri: statemachine/scraping.asl.json
      DefinitionSubstitutions:
        ScrapeMatchesFunctionArn: !GetAtt ScrapeMatchesFunction.Arn
      Policies:
        LambdaInvokePolicy:
          FunctionName: !Ref ScrapeMatchesFunction
      Events:
        Schedule:
          Type: ScheduleV2
          Properties:
            Name: !Sub ${ApplicationName}-scrape-matches-scheduler
            ScheduleExpression: !Ref ScheduleExpression

  ScrapeMatchesFunction:
    Type: AWS::Serverless::Function
    Metadata:
      SkipBuild: true
    Properties:
      FunctionName: !Sub ${ApplicationName}-scrape-matches
      CodeUri: .build/scrape/
      Description: "scrape valorant esports upcoming matches"
      Timeout: 900
      Policies:
        - SQSSendMessagePolicy:
            QueueName: !GetAtt ScrapedMatchesQueue.QueueName
      Environment:
        Variables:
          SQS_QUEUE_URL: !Ref ScrapedMatchesQueue

  RegisterMatchesFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${ApplicationName}-register-matches
      CodeUri: .build/register/
      Description: "register valorant matches to DynamoDB"
      Timeout: 900
      Policies:
        DynamoDBCrudPolicy:
          TableName: !Ref MatchListTable
      Environment:
        Variables:
          MATCHLIST_TABLE: !Ref MatchListTable
      Events:
        MySQSEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt ScrapedMatchesQueue.Arn
            BatchSize: 25
            MaximumBatchingWindowInSeconds: 60
            ScalingConfig:
              MaximumConcurrency: 2

  UpdateCalendarsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${ApplicationName}-update-calendars
      CodeUri: .build/update-calendars/
      Description: "create Google Calendar events from DynamoDB Stream"
      Timeout: 60
      Layers:
        - arn:aws:lambda:us-east-1:177933569100:layer:AWS-Parameters-and-Secrets-Lambda-Extension:11
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref MatchListTable
        - DynamoDBCrudPolicy:
            TableName: !Ref OutboxTable
        - SSMParameterWithSlashPrefixReadPolicy:
            ParameterName: !Ref ServiceAccountKeyParameter
      Environment:
        Variables:
          CALENDAR_EVENT_TABLE: !Ref OutboxTable
          CALENDAR_ID_AMERICAS: !Ref CalendarIdAmericas
          CALENDAR_ID_CHINA: !Ref CalendarIdChina
          CALENDAR_ID_EMEA: !Ref CalendarIdEmea
          CALENDAR_ID_PACIFIC: !Ref CalendarIdPacific
          CALENDAR_ID_INTERNATIONAL: !Ref CalendarIdInternational
          SERVICE_ACCOUNT_KEY_PARAMETER: !Ref ServiceAccountKeyParameter
      Events:
        DynamoDBStream:
          Type: DynamoDB
          Properties:
            Stream: !GetAtt MatchListTable.StreamArn
            BatchSize: 10
            BisectBatchOnFunctionError: true
            Enabled: true
            StartingPosition: TRIM_HORIZON

  ScrapedMatchesQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${ApplicationName}-scraped-matches
      DelaySeconds: 10
      VisibilityTimeout: 1000

  MatchListTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      TableName: !Sub ${ApplicationName}-fetched
      AttributeDefinitions:
        - AttributeName: match_id
          AttributeType: N
      BillingMode: PROVISIONED
      DeletionProtectionEnabled: True
      KeySchema:
        - AttributeName: match_id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true

  OutboxTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      TableName: !Sub ${ApplicationName}-published
      AttributeDefinitions:
        - AttributeName: match_id
          AttributeType: N
        - AttributeName: calendar_id
          AttributeType: S
      BillingMode: PROVISIONED
      DeletionProtectionEnabled: True
      KeySchema:
        - AttributeName: match_id
          KeyType: HASH
        - AttributeName: calendar_id
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true

  ScrapeMatchesFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${ScrapeMatchesFunction}
      RetentionInDays: !Ref DaysToRetainLogs

  RegisterMatchesFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${RegisterMatchesFunction}
      RetentionInDays: !Ref DaysToRetainLogs

  UpdateCalendarsFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${UpdateCalendarsFunction}
      RetentionInDays: !Ref DaysToRetainLogs