{
    "Comment": "Scrape vlr.gg match pages",
    "StartAt": "Initialize Loop State",
    "States": {
        "Initialize Loop State": {
            "Type": "Pass",
            "Parameters": {
                "currentPage": 1,
                "maxPages": 10,
                "shouldContinue": true
            },
            "Next": "Check Continue Condition"
        },
        "Check Continue Condition": {
            "Type": "Choice",
            "Choices": [
                {
                    "And": [
                        {
                            "Variable": "$.shouldContinue",
                            "BooleanEquals": true
                        },
                        {
                            "Variable": "$.currentPage",
                            "NumericLessThanEqualsPath": "$.maxPages"
                        }
                    ],
                    "Next": "Wait Before Scraping"
                }
            ],
            "Default": "Execution Complete"
        },
        "Wait Before Scraping": {
            "Type": "Wait",
            "Seconds": 30,
            "Next": "Scrape Matches"
        },
        "Scrape Matches": {
            "Type": "Task",
            "Resource": "${ScrapeMatchesFunctionArn}:$LATEST",
            "Parameters": {
                "page.$": "$.currentPage"
            },
            "ResultPath": "$.lambdaResult",
            "Retry": [
                {
                    "ErrorEquals": [
                        "Lambda.ServiceException",
                        "Lambda.AWSLambdaException",
                        "Lambda.SdkClientException",
                        "Lambda.TooManyRequestsException"
                    ],
                    "IntervalSeconds": 1,
                    "MaxAttempts": 3,
                    "BackoffRate": 2
                }
            ],
            "Next": "Parse Lambda Output"
        },
        "Parse Lambda Output": {
            "Type": "Pass",
            "Parameters": {
                "currentPage.$": "$.currentPage",
                "maxPages.$": "$.maxPages",
                "lambdaResult.$": "$.lambdaResult",
                "parsedOutput.$": "States.StringToJson($.lambdaResult)"
            },
            "Next": "Check Matches Count"
        },
        "Check Matches Count": {
            "Type": "Choice",
            "Choices": [
                {
                    "Variable": "$.parsedOutput.matches_count",
                    "NumericLessThan": 50,
                    "Next": "Stop Processing"
                }
            ],
            "Default": "Continue Processing"
        },
        "Continue Processing": {
            "Type": "Pass",
            "Parameters": {
                "currentPage.$": "States.MathAdd($.currentPage, 1)",
                "maxPages.$": "$.maxPages",
                "shouldContinue": true,
                "lastResult.$": "$.lambdaResult",
                "lastMatchesCount.$": "$.parsedOutput.matches_count"
            },
            "Next": "Check Continue Condition"
        },
        "Stop Processing": {
            "Type": "Pass",
            "Parameters": {
                "currentPage.$": "$.currentPage",
                "maxPages.$": "$.maxPages",
                "shouldContinue": false,
                "terminationReason": "matches_count was less than 50",
                "finalMatchesCount.$": "$.parsedOutput.matches_count",
                "lastResult.$": "$.lambdaResult"
            },
            "Next": "Check Continue Condition"
        },
        "Execution Complete": {
            "Type": "Pass",
            "Parameters": {
                "totalPagesProcessed.$": "States.MathAdd($.currentPage, -1)",
                "terminationReason.$": "$.terminationReason",
                "finalMatchesCount.$": "$.finalMatchesCount",
                "lastResult.$": "$.lastResult",
                "completionReason.$": "States.Format('Loop completed. shouldContinue: {}, currentPage: {}, maxPages: {}', $.shouldContinue, $.currentPage, $.maxPages)"
            },
            "End": true
        }
    }
}